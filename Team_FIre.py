'''1. Напишите программу, которая принимает имя файла и выводит его расширение. Если расширение у файла определить невозможно, выбросите исключение.'''

# def f():
#     a = input('Введите название файла: ')
#     print(a[a.rfind('.') + 1:] if '.' in a else 'Что-то с файликом не так')
# f()


''' 2. Напишите функцию, которая принимает год и определяет, является ли год с данным номером високосным. Если год является високосным, то возвращает «YES», иначе возвращает «NO».Год является високосным, если его номер кратен 4, но не кратен 100, или если он кратен 400.'''
# def year_print(year):
#     if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
#         print('YES')
#     else:
#         print('NO')
# year_print(year = int(input()))


'''3. Напишите функцию, которая принимает возраст собаки и нужно вычислить, возраст собаки в человеческих годах.(В течение первых двух лет собачий год равен 10.5 человеческим годам. После этого каждый год собаки равен 4 человеческим годам).'''

# def f():
#     a = int(input('Введите возраст собаки: '))
#     age = 10.5
#     age_2 = 4
#     if a <= 2:
#         print(a*age)
#     else:
#         print(2 * age + (a - 2) * age_2)
# f()

# 4. Напишите алгоритм, определяющий, является ли число n счастливым.

# Счастливое число — это число, определяемое следующим процессом:

# Начиная с любого положительного целого числа, замените число суммой квадратов его цифр.
# Повторяйте процесс до тех пор, пока число не станет равным 1 (где оно и останется), или пока он не будет бесконечно повторяться в цикле , который не включает 1.
# Те числа, для которых этот процесс заканчивается на 1 , счастливы.
# Возврат true , если n это счастливое число, а false если нет .

# Пример 1:

# Ввод: n = 19
# Вывод: правда

# Объяснение: 
# 1**2 + 9**2 = 82
# 8**2 + 2**2 = 68
# 6**2 + 8**2 = 100
# 1**2 + 0**2 + 0**2 = 1

# Пример 2:

# Вход: n = 2
# Выход: ложь

'''def heppy_num(number):
    List = range(-1, number * number + 9,2)
    i = 2
    while List[i:]:List=sorted(set(List)-set(List[List[i]::List[i]]));i+=1
    print(List[1: number + 1])
    if number % 2 != 0:
        print('Правда')
    else:
        print('Лож')
heppy_num(number=int(input("Введите число: ")))'''


'''5. Строка считается заглавной, если каждое слово в строке либо (а) пишется с заглавной буквы (то есть только первая буква слова в верхнем регистре), либо (б) 
считается исключением и полностью помещается в строчными буквами, если только это не первое слово, которое всегда пишется с большой буквы.
Напишите функцию, которая преобразует строку в заглавный регистр, учитывая необязательный список исключений (второстепенные слова). Список второстепенных слов будет представлен в виде строки, где каждое 
слово отделено пробелом. Ваша функция должна игнорировать регистр строки второстепенных слов — она должна вести себя так же, даже если регистр строки второстепенных слов изменен.
Первый аргумент (обязательный): исходная строка для преобразования.
Второй аргумент (необязательный): список второстепенных слов, разделенных пробелами, которые всегда должны быть строчными, за исключением первого слова в строке
'''
'''примеры:
title_case('a clash of KINGS', 'a an the of') # 
должен вернуть: 'A Clash of Kings'

title_case('THE WIND IN THE WILLOWS', 'The In') # 
должен вернуть: 'The Wind in the Willows'

title_case('the quick brown fox') # 
должен вернуть: 'The Quick Brown Fox'''

# def title_case(title, minor_words=''):
#     words = []
#     for w in title.split():
#         if w.lower() not in minor_words.lower().split() or len(words) == 0:
#             words.append(w.title())
#         else:
#             words.append(w.lower())
#     return print(" ".join(words))
# title_case(input('Введите текст: '), input('Введите второстепенное слово: '))


'''6. Напишите функцию to_weird_case, которая принимает строку и возвращает ту же строку, в которой все символы с четным индексом в каждом слове отображаются в верхнем регистре, а все символы с нечетным индексом в каждом слове — в нижнем регистре. Только что объясненная индексация основана на нуле, поэтому нулевой индекс четный, поэтому этот символ должен быть в верхнем регистре, и вам нужно начинать заново для каждого слова.

Передаваемая строка будет состоять только из букв алфавита и пробелов (' '). Пробелы будут присутствовать только в том случае, если слов несколько. Слова будут разделены одним пробелом (' ').

ПрИмЕрЫ:
to_weird_case('String'); # => returns 'StRiNg'
to_weird_case('Weird string case') # => returns 'WeIrD StRiNg CaSe'
to_weird_case('This') # => returns 'ThIs'
to_weird_case('is') # => returns 'Is'
to_weird_case('This is a test') # => returns 'ThIs Is A TeSt'''

# def word_case(string):
#     num = 0
#     new_word = []
#     for i in string:
#         if num % 2 == 0:
#             num += 1
#             new_word.append(i.upper())
#         else:
#             num += 1
#             new_word.append(i.lower())
#     print(''.join(new_word))
# word_case(input())


'''задание7'''
# s = input('')
# new=[]
# for i, val in enumerate(s[:]):
#     up=s[i].upper()
#     c=s.replace(s[i],up)
#     new.append(c)
# print(new)
